/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GerenciamentoDeFuncionarios;

import Controle.Funcionario;
import GerenciamentoDeFuncionarios.ControlaFuncionario;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.event.ListDataListener;

/**
 *
 * @author rafael
 * 
 * Essa classe controla um frame para acessar uma lista dos funcionários
 * cadastrados. Caso seja criada com o construtor sem parâmetros, todos os
 * funcionários do sistema serão listados para consulta. Há um construtor de
 * parâmetro booleano para exibir somente funcionários ativos ou somente aqueles
 * que foram desligados.
 */
public class FrameListaFuncionario extends javax.swing.JFrame {
    
    ArrayList <Funcionario> funcionarios;
    boolean ativos;

    /**
     * Creates new form FrameListaFuncionario
     */
    public FrameListaFuncionario() {
        initComponents();
        FetchFuncionarios();
    }
    
    /*
        ativos = true: Cria uma lista com todos os funcionários ativos da
    empresa. Eles podem ter seu cadastro e faltas consultados, bem como podem
    ser desligados por um botão
    
        ativos = false: Cria uma lista com os funcionários desligados. Como
    acima, mas o botão de desligamento é revertido para um botão de reativação,
    que pode mudar o status do funcionário para ativo
    */
    public FrameListaFuncionario(boolean ativos) {
        initComponents();
        this.ativos = ativos;
        FetchFuncionarios(ativos);
    }
    
    /*
        Obtém uma lista com todos os funcionários e a exibe no frame
    */
    public void FetchFuncionarios()
    {
        funcionarios = new ControlaFuncionario().getListaFuncionarios();
        Vector <String> nomes_func = new Vector();
        
        for(Funcionario f : funcionarios)
        {
            nomes_func.add(f.getNome());
        }

        this.jList1.setListData(nomes_func);
        this.jButtonLigDes.setVisible(false);
    }
    
    /*
        Obtém lista de funcionários ativos ou inativos, conforme o valor do
    parâmetro, exibindo a lista resultante no frame
    */
    public void FetchFuncionarios(boolean ativos)
    {
        if(ativos)
            funcionarios = new ControlaFuncionario().getListaFuncionariosAtivos();
        else
            funcionarios = new ControlaFuncionario().getListaFuncionariosInativos();
            
        Vector <String> nomes_func = new Vector();
        
        for(Funcionario f : funcionarios)
        {
            nomes_func.add(f.getNome());
        }

        this.jList1.setListData(nomes_func);
        
        if(ativos)
            this.jButtonLigDes.setText("Desligar");
        else
            this.jButtonLigDes.setText("Reativar");
        
        this.jButtonLigDes.setVisible(true);
    }
        


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButtonLigDes = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton2.setText("Voltar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Consultar Cadastro");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel1.setText("Selecione um funcionário:");

        jButton3.setText("Consultar Faltas");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButtonLigDes.setText("DLFUNC");
        jButtonLigDes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLigDesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(0, 382, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(80, 80, 80)
                        .addComponent(jButtonLigDes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(68, 68, 68)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButtonLigDes)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int indice = jList1.getSelectedIndex();
        
        if(indice != -1)
        {
            Funcionario fetchfun = this.funcionarios.get(indice);
            JFrame framecadastro = new FrameCadastroFuncionario(fetchfun);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int indice = jList1.getSelectedIndex();
        
        if(indice != -1)
        {
            Funcionario fetchfun = this.funcionarios.get(indice);
            JFrame framefaltas = new FrameConsultarFrequencia(fetchfun);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButtonLigDesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLigDesActionPerformed
        int indice = jList1.getSelectedIndex();
        if(indice == -1)
            return;
        
        Funcionario fetchfun = this.funcionarios.get(indice);
        
        if(ativos)
        {
            fetchfun.setStatus(0);
        }
        else
        {
            fetchfun.setStatus(1);
        }
        
        boolean persistiu = new ControlaFuncionario().persisteFuncionario(fetchfun);
        if(persistiu){
            if(ativos)
            {
                JOptionPane.showMessageDialog(null, "Funcionario Desligado!");
                this.FetchFuncionarios(true);
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Funcionario Reativado!");
                this.FetchFuncionarios(false);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Erro ao salvar alterações!");
        }
    }//GEN-LAST:event_jButtonLigDesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameListaFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameListaFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameListaFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameListaFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameListaFuncionario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonLigDes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
