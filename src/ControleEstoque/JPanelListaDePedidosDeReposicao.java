/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ControleEstoque;

import ControleProduto.ControlaProduto;
import ControleProduto.Produto;
import GerenciamentoDeFuncionarios.ControlaFuncionario;
import GerenciamentoDeFuncionarios.Funcionario;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rafael
 */
public class JPanelListaDePedidosDeReposicao extends javax.swing.JPanel {

    private ArrayList <PedidoEstoque> pedidos;
    private ArrayList <ProdPedEstoque> prodpedes;
    private ArrayList <Produto> produtos;
    private ArrayList <Funcionario> funcionarios;
    
    /**
     * Creates new form JPanelListaDePedidosDeReposicao
     */
    public JPanelListaDePedidosDeReposicao() {
        initComponents();
        updatePedidosEstoque();
    }
    
    public void updatePedidosEstoque()
    {
        pedidos = new ControlaPedidoEstoque().getListaPedidoEstoque();
        produtos = new ControlaProduto().getListaProdutos();
        funcionarios = new ControlaFuncionario().getListaFuncionarios();
        
        DefaultTableModel model = new DefaultTableModel();
        String[] colunas = new String[6];
        
        model.setColumnCount(5);
        colunas[0] = "ID";
        colunas[1] = "Status";
        colunas[2] = "Solicitante";
        colunas[3] = "Data Sol.";
        colunas[4] = "Data At.";
        colunas[5] = "Produtos";
        model.setColumnIdentifiers(colunas);
        
        for(PedidoEstoque p : pedidos)
        {
            prodpedes = new ControlaProdPedEstoque().getListaProdPedEstoque(p);
            Object[] obe = new Object[6];
            
            obe[0] = p.getIdPedEst();
            
            int naoatendidos = 0;
            int cancelados = 0;
            for(ProdPedEstoque ppe: prodpedes)
            {
                if(ppe.getStat() == 0)
                    ++naoatendidos;
                else if(ppe.getStat() == 3)
                    ++cancelados;
            }
            
            if(naoatendidos == prodpedes.size())
                obe[1] = "Não Processado";
            else if(cancelados == prodpedes.size())
                obe[1] = "Cancelado";
            else
                obe[1] = "Efetivado";
            
            for(Funcionario f : funcionarios)
            {
                if(f.getIdFunc().equals(p.getFuncionario().getIdFunc()))
                    obe[2] = f.getNome();
            }
            
            obe[3] = p.getDataPed().toString();
            obe[4] = p.getDataAtend().toString();
            
            obe[5] = "";
            for(ProdPedEstoque ppe : prodpedes)
            {
                for(Produto pdt : produtos)
                {
                    if(ppe.getProduto().getProdId().equals(pdt.getProdId()))
                    {
                        obe[5] += pdt.getNomeProd();
                        obe[5] += ", ";
                    }
                }
            }
            
            model.addRow(obe);
        }
        
        this.jTable1.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jLabel1.setText("Lista de Pedidos de Reposição de Estoque");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Efetivar Pedido");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar Pedido");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(7, 7, 7))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(jButton1))
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        PedidoEstoque selecionado = pedidos.get(jTable1.getSelectedRow());
        
        if(selecionado.getDataAtend().equals(selecionado.getDataPed()))
        {
            new JFrameConfirmarPedido(selecionado, this).setVisible(true);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Erro: Esse pedido já foi efetivado. Escolha outro pedido.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        PedidoEstoque selecionado = pedidos.get(jTable1.getSelectedRow());
        
        if(selecionado.getDataAtend().equals(selecionado.getDataPed()))
        {
            Date dataAtend = new Date();
            selecionado.setDataAtend(dataAtend);
            boolean persistiu = new ControlaPedidoEstoque().persistePedidoEstoque(selecionado);
            boolean deuerro = !persistiu;
            
            ControlaProdPedEstoque ctrlppe = new ControlaProdPedEstoque();
            ArrayList <ProdPedEstoque> ppelist = ctrlppe.getListaProdPedEstoque(selecionado);
            for(ProdPedEstoque ppe : ppelist)
            {
                ppe.setStat(3); //Cancelado
                persistiu = ctrlppe.persisteProdPedEstoque(ppe);
                if(!persistiu)
                    deuerro = true;
            }
            
            if(!deuerro){
                JOptionPane.showMessageDialog(null, "Pedido Cancelado!");
                this.updatePedidosEstoque();
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Erro ao cancelar pedido!");
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Erro: Esse pedido já foi efetivado. Escolha outro pedido.");
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
